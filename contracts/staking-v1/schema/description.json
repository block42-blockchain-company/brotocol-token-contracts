{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Description",
  "description": "This structure describes the fields for lockup info response message.",
  "type": "object",
  "required": [
    "amount",
    "epochs_locked",
    "locked_at_block"
  ],
  "properties": {
    "amount": {
      "description": "locked amount",
      "allOf": [
        {
          "$ref": "#/definitions/Uint128"
        }
      ]
    },
    "epochs_locked": {
      "description": "amount of epochs until lockup will be unlocked",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "locked_at_block": {
      "description": "block at whick locup was created",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    }
  },
  "definitions": {
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
