{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "description": "This structure describes the execute messages of the contract.",
  "oneOf": [
    {
      "title": "Description",
      "description": "Updates contract settings ## Executor Only owner can execute this function",
      "type": "object",
      "required": [
        "update_config"
      ],
      "properties": {
        "update_config": {
          "type": "object",
          "properties": {
            "genesis_time": {
              "description": "new genesis time frame",
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "title": "Description",
      "description": "Registers vesting accounts for future distribution ## Executor Only owner can execute this function",
      "type": "object",
      "required": [
        "register_vesting_accounts"
      ],
      "properties": {
        "register_vesting_accounts": {
          "type": "object",
          "required": [
            "vesting_accounts"
          ],
          "properties": {
            "vesting_accounts": {
              "description": "vesting accounts",
              "type": "array",
              "items": {
                "$ref": "#/definitions/VestingAccount"
              }
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "title": "Description",
      "description": "Claims available amount for message sender",
      "type": "object",
      "required": [
        "claim"
      ],
      "properties": {
        "claim": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "title": "Description",
      "description": "Creates an offer for a new owner. The validity period of the offer is set in the `expires_in_blocks` variable ## Executor Only owner can execute this function",
      "type": "object",
      "required": [
        "propose_new_owner"
      ],
      "properties": {
        "propose_new_owner": {
          "type": "object",
          "required": [
            "expires_in_blocks",
            "new_owner"
          ],
          "properties": {
            "expires_in_blocks": {
              "description": "expiration period in blocks",
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "new_owner": {
              "description": "new contract owner",
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "title": "Description",
      "description": "Removes the existing offer for the new owner ## Executor Only owner can execute this function",
      "type": "object",
      "required": [
        "drop_ownership_proposal"
      ],
      "properties": {
        "drop_ownership_proposal": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "title": "Description",
      "description": "Used to claim(approve) new owner proposal, thus changing contract's owner ## Executor Only address proposed as a new owner can execute this function",
      "type": "object",
      "required": [
        "claim_ownership"
      ],
      "properties": {
        "claim_ownership": {
          "type": "object"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    },
    "VestingAccount": {
      "title": "VestingAccount",
      "description": "This structure describes the basic settings for vesting account.",
      "type": "object",
      "required": [
        "address",
        "schedules"
      ],
      "properties": {
        "address": {
          "description": "account address",
          "type": "string"
        },
        "schedules": {
          "description": "vesting schedules",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VestingSchedule"
          }
        }
      }
    },
    "VestingSchedule": {
      "title": "VestingSchedule",
      "description": "This structure describes the basic settings for vesting schedule.",
      "type": "object",
      "required": [
        "bro_amount",
        "end_time",
        "start_time"
      ],
      "properties": {
        "bro_amount": {
          "description": "claimable amount for schedule",
          "allOf": [
            {
              "$ref": "#/definitions/Uint128"
            }
          ]
        },
        "end_time": {
          "description": "the end time frame of schedule",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        },
        "start_time": {
          "description": "the start time frame of schedule",
          "type": "integer",
          "format": "uint64",
          "minimum": 0.0
        }
      }
    }
  }
}
